"""Added Initial DB structure

Revision ID: e35b5d0db04d
Revises: 
Create Date: 2022-07-16 19:32:48.695966

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e35b5d0db04d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('country',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('shortname', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('shortname')
    )
    op.create_index(op.f('ix_country_id'), 'country', ['id'], unique=True)
    op.create_table('range_event_group',
    sa.Column('created_date', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_date', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('range_shooter_id', sa.Integer(), nullable=True),
    sa.Column('sequence_number', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('event_type', sa.Integer(), nullable=True),
    sa.Column('group_ordinal', sa.Integer(), nullable=True),
    sa.Column('firing_type', sa.Enum('SIGHTERS', 'MATCH', 'SINGLE_SHOT', 'RAPID_FIRE', 'FINISHED', 'CANCELLED', name='firingtype'), nullable=False),
    sa.Column('expected_number_of_shots', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_range_event_group_firing_type'), 'range_event_group', ['firing_type'], unique=False)
    op.create_index(op.f('ix_range_event_group_id'), 'range_event_group', ['id'], unique=True)
    op.create_table('range_event_practice',
    sa.Column('created_date', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_date', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('range_shooter_id', sa.Integer(), nullable=True),
    sa.Column('sequence_number', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('event_type', sa.Integer(), nullable=True),
    sa.Column('practice_sequence_number', sa.Integer(), nullable=True),
    sa.Column('shoot_code', sa.Integer(), nullable=True),
    sa.Column('practice_code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_range_event_practice_id'), 'range_event_practice', ['id'], unique=True)
    op.create_table('range_event_shooter',
    sa.Column('created_date', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_date', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('range_shooter_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('team', sa.String(), nullable=True),
    sa.Column('class', sa.String(), nullable=True),
    sa.Column('lane_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_range_event_shooter_id'), 'range_event_shooter', ['id'], unique=True)
    op.create_table('range_event_shot',
    sa.Column('created_date', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_date', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('range_shooter_id', sa.Integer(), nullable=True),
    sa.Column('sequence_number', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('shot_id', sa.Integer(), nullable=True),
    sa.Column('shot_value', sa.Integer(), nullable=True),
    sa.Column('shot_value_decimal', sa.Integer(), nullable=True),
    sa.Column('x_coord', sa.Float(), nullable=True),
    sa.Column('y_coord', sa.Float(), nullable=True),
    sa.Column('shot_timestamp', sa.Integer(), nullable=True),
    sa.Column('caliber', sa.Integer(), nullable=True),
    sa.Column('shot_attr', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_range_event_shot_id'), 'range_event_shot', ['id'], unique=True)
    op.create_table('shooting_club',
    sa.Column('created_date', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_date', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('shortname', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('shortname')
    )
    op.create_index(op.f('ix_shooting_club_id'), 'shooting_club', ['id'], unique=True)
    op.create_table('shooting_range',
    sa.Column('created_date', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('modified_date', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('lanes', sa.Integer(), nullable=True),
    sa.Column('first_lane', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_shooting_range_id'), 'shooting_range', ['id'], unique=True)
    op.create_table('club_country_association',
    sa.Column('club_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('country_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['shooting_club.id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], )
    )
    op.create_table('club_range_association',
    sa.Column('club_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('range_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['shooting_club.id'], ),
    sa.ForeignKeyConstraint(['range_id'], ['shooting_range.id'], )
    )
    op.create_table('range_shooter_association',
    sa.Column('range_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('shooter_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['range_id'], ['shooting_range.id'], ),
    sa.ForeignKeyConstraint(['shooter_id'], ['range_event_shooter.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('range_shooter_association')
    op.drop_table('club_range_association')
    op.drop_table('club_country_association')
    op.drop_index(op.f('ix_shooting_range_id'), table_name='shooting_range')
    op.drop_table('shooting_range')
    op.drop_index(op.f('ix_shooting_club_id'), table_name='shooting_club')
    op.drop_table('shooting_club')
    op.drop_index(op.f('ix_range_event_shot_id'), table_name='range_event_shot')
    op.drop_table('range_event_shot')
    op.drop_index(op.f('ix_range_event_shooter_id'), table_name='range_event_shooter')
    op.drop_table('range_event_shooter')
    op.drop_index(op.f('ix_range_event_practice_id'), table_name='range_event_practice')
    op.drop_table('range_event_practice')
    op.drop_index(op.f('ix_range_event_group_id'), table_name='range_event_group')
    op.drop_index(op.f('ix_range_event_group_firing_type'), table_name='range_event_group')
    op.drop_table('range_event_group')
    op.drop_index(op.f('ix_country_id'), table_name='country')
    op.drop_table('country')
    # ### end Alembic commands ###
